import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import NavBar from "@/components/NavBar";
import SplashCursor from "@/components/Splash";
import Script from "next/script";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Kaalnetra",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <SplashCursor TRANSPARENT BACK_COLOR={{ r: 0, g: 0, b: 0 }} />
        <NavBar />
        <Script id="fullscreen-init" strategy="afterInteractive">{`
          (function(){
            function requestFS(){
              try{
                var doc = document;
                var elem = doc.documentElement;
                if (!elem) return;
                if (doc.fullscreenElement || doc.webkitFullscreenElement || doc.msFullscreenElement) return;
                var req = elem.requestFullscreen || elem.webkitRequestFullscreen || elem.msRequestFullscreen;
                if (typeof req === 'function'){
                  var ret = req.call(elem);
                  if (ret && typeof ret.then === 'function') { ret.catch(function(){}); }
                }
              }catch(e){}
            }
            // Try as early as possible after load
            document.addEventListener('DOMContentLoaded', requestFS, { once: true });
            window.addEventListener('load', requestFS, { once: true });
            // Retry a few times (in case of async UI overlays)
            (function(){
              var attempts = 0, maxAttempts = 10;
              var iv = setInterval(function(){
                attempts++;
                requestFS();
                if (document.fullscreenElement || document.webkitFullscreenElement || document.msFullscreenElement || attempts >= maxAttempts) {
                  clearInterval(iv);
                }
              }, 500);
            })();
            // Fallback to first user gesture
            function onGesture(){ requestFS(); }
            window.addEventListener('pointerdown', onGesture, { once: true });
            window.addEventListener('keydown', onGesture, { once: true });
          })();
        `}</Script>
        {children}
      </body>
    </html>
  );
}
